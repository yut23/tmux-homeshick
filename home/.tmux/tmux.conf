# Session options
# reduce time tmux waits to send commands after an escape is input
set -sg escape-time 50

# Window options
# allow multiple clients to display windows from the same session in different sizes
setw -g aggressive-resize on
setw -g mode-keys vi # enable vi keys for working with buffers
#setw -g mode-mouse on # allow mouse drags to enter copy mode and select text
# watch for activity in windows so it can be indicated in the status bar
# (see visual-activity option below)
setw -g monitor-activity on
setw -g renumber-windows on # when one is deleted

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# Prefix key
set -g prefix C-a # instead of default C-b
unbind C-b # don't want two keys prefix keys
bind C-a send-prefix # press C-a twice to send to an app

# Key bindings
bind C-d detach
bind r source-file ~/.tmux.conf \; display "reloaded" # reload this file
# The line above replaces the default binding to the "refresh-client" command.
bind | split-window -h # in addition to %
bind - split-window -v # in addition to "
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Mouse options
set-option -g mouse on
# Scrolling the mouse wheel enters copy mode
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
# scroll half a page
bind -t vi-copy WheelUpPane halfpage-up
bind -t vi-copy WheelDownPane halfpage-down
#set -g mouse-select-pane on # activate pane by clicking in it
#set -g mouse-resize-pane on # resize pane by dragging border
#set -g mouse-select-window on # change window by clicking name in status bar

# Color customizations
set -g default-terminal "screen-256color" # use 256 colors instead of 16
#set -g pane-border-fg black # default is "default" which is gray

# Status bar
#set -g status-fg black # default is black
set -g status-interval 2 # update status bar every 30 seconds
#set -g status-justify centre # display window list in center of status bar
#set -g status-left "session #S window #I pane #P -"
set -g status-left-length 40
set -g status-right "#h %a %m/%d/%y" # hostname, day abbrev., month, day, year
set -g status-right-length 45
set -g status-utf8 on # allow status bar to contain Unicode characters
set -g visual-activity on # highlight window names in status bar on activity

set-window-option -g status-left " #h | #S "
set-window-option -g status-left-fg black
set-window-option -g status-left-bg white

set-window-option -g status-right " %H:%M %d-%b-%y "
set-window-option -g status-right-fg black
set-window-option -g status-right-bg white

set-window-option -g window-status-format " #I: #W "

set-window-option -g window-status-current-format " #I: #W "
set-window-option -g window-status-current-fg black
#set-window-option -g window-status-current-bg colour235

# better navigation for nested tmux sessions
set -g status-bg colour40
setw -g window-status-current-bg colour253

bind -n C-t new-window -a
bind -n S-left  prev
bind -n S-right next
bind -n S-C-left  swap-window -t -1
bind -n S-C-right swap-window -t +1

bind -n M-F11 set -qg status-bg colour25
bind -n M-F12 set -qg status-bg colour40
bind -n S-up \
  send-keys M-F12 \; \
  set -qg status-bg colour25 \; \
  unbind -n S-left \; \
  unbind -n S-right \; \
  unbind -n S-C-left \; \
  unbind -n S-C-right \; \
  unbind -n C-t \; \
  set -qg prefix C-b
bind -n S-down \
  send-keys M-F11 \; \
  set -qg status-bg colour40 \; \
  bind -n S-left  prev \; \
  bind -n S-right next \; \
  bind -n S-C-left swap-window -t -1 \; \
  bind -n S-C-right swap-window -t +1 \; \
  bind -n C-t new-window -a -c "#{pane_current_path}" \; \
  set -qg prefix C-a


#set -g terminal-overrides 'xterm*:XT:smcup@:rmcup@'
set -g set-titles on
set -g set-titles-string "#H: #T"

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
